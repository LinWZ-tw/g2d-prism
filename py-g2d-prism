#env python3.8
#coding: utf-8
"""
Created on Thu Sep 16 22:52:03 2021
@author: wei-zhi lin

the following module might be needed
rpy2
pandas
...
"""


#%%
#for conduct gep2pep
#unfinished



#%%
#input data 
import pandas as pd
print('path of input list =')
input_path = input() 
    #type in the path of input
    #example-input could be downloaded from here: https://github.com/LinWZ-tw/g2d-prism/blob/e246e7f4466b12b836133b2759866a4872d03ebe/example-input-compounds-for-py.csv
    #                    or downloaded from here: https://drive.google.com/file/d/1wzSpgCAqR0E3rUOv6w2jv_TW0CtJcj1M/view?usp=sharing
input_compounds = pd.read_csv(input_path)
print('\n', 'selected compounds = \n', input_compounds, '\n')
print('--------------------------------------------------------------------')
print('select primary tissue of interest: \n\
esophagus \n\
uterus \n\
pancreas \n\
colorectal \n\
liver \n\
central_nervous_system \n\
urinary_tract \n\
lung \n\
rhabdoid \n\
ovary \n\
bone \n\
mesothelioma \n\
skin \n\
kidney \n\
soft_tissue \n\
thyroid \n\
upper_aerodigestive \n\
peripheral_nervous_system \n\
gastric \n\
bile_duct \n\
breast \n\
prostate \n\
fibroblast \n\
rhabdomyosarcoma')
input_pt = input()

print('--------------------------------------------------------------------')
#%%
#get prism data 19Q4
print('download data from PRISM ...')
url_cell_line_info_19Q4 = 'https://ndownloader.figshare.com/files/20237718' 
cell_line_info = pd.read_csv(url_cell_line_info_19Q4)
    #get cell line information
url_treatment_info_19Q4 = 'https://ndownloader.figshare.com/files/20237715' 
treatment_info = pd.read_csv(url_treatment_info_19Q4)
    #get compounds/treatments information
url_prism_data_19Q4 = 'https://ndownloader.figshare.com/files/20237709' 
prism_data = pd.read_csv(url_prism_data_19Q4)
    #get sensitivity data
#%%
#filter cell line by selected primary tissue
f_cell_line_info = cell_line_info[cell_line_info['primary_tissue'] == input_pt]
f_cell_line_info = f_cell_line_info[['depmap_id','ccle_name','primary_tissue', 'secondary_tissue', 'tertiary_tissue']]
len_cell_line_list = len(f_cell_line_info)
print('number of selected cell lines =', len_cell_line_list)
print('output cell line information to "cell_line_info.xlsx"')
f_cell_line_info.to_excel('cell_line_info.xlsx')
    #export cell line information of selected primary tissue

#filter compounds/treatments by input list
f_treatment_info = pd.merge(input_compounds, treatment_info, on='name')
f_treatment_info = f_treatment_info[['column_name', 'name']]
i_f_treatment_info = f_treatment_info.set_index('column_name')
i_f_treatment_info.to_excel('f_treatment_info.xlsx')
t_i_f_treatment_info = i_f_treatment_info.transpose()
len_treatment = len(f_treatment_info)-1
print("number of compounds = ", len_treatment) 
print('output compound information to "compound_info.xlsx"')
t_i_f_treatment_info.to_excel("compound_info.xlsx")
    #export compounds/treatments of input (as head in result table )

print('--------------------------------------------------------------------')
#%%
#align selected cell line to prism data
f_prism_data = pd.merge(f_cell_line_info, prism_data, how = 'inner', left_on = 'depmap_id', right_on = 'Unnamed: 0', sort = bool)
    #select cell line from prism data
f_prism_data = pd.concat([t_i_f_treatment_info, f_prism_data])
    #add a head

#align input compounds to prism data
list_cell_treatment_id = list(f_treatment_info['column_name'])
list_cell_treatment_id.insert(0, 'primary_tissue')
list_cell_treatment_id.insert(0, 'ccle_name')
list_cell_treatment_id.insert(0, 'depmap_id')
f_prism_data = f_prism_data[list_cell_treatment_id]
    #select compounds/treatment from prism data
f_prism_data = f_prism_data.set_index('depmap_id')

#export results
print(f_prism_data)
print('output result to "result.xlsx"')
f_prism_data.to_excel('result.xlsx')

#%%


